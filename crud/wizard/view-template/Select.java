package #{class.package};

import java.util.ArrayList;
import java.util.List;

import org.romaframework.frontend.domain.crud.CRUDSelect;
import org.romaframework.frontend.domain.crud.FullTextCRUDFilter;
import org.romaframework.aspect.view.ViewConstants;
import org.romaframework.aspect.view.annotation.ViewClass;
import org.romaframework.core.Roma;

import #{domain.package}.#{crud.class};
import #{project.package}.factory.#{crud.class}Factory;
import #{project.package}.repository.#{crud.class}Repository;

/**
 * Derived from #{crud.class}Main allows to select instances listed as result sets. It's usually
 * called from domain relationships of type 1-1, 1-N and N-M. If the relationship is 1-N or N-M
 * then you can select multiple instances from the result set.
 * <br/>
 * This class is generated by Roma Meta Framework CRUD wizard.       
 * <br/><br/>
 * @see #{crud.class}Main 
 * <br/><br/>
 * @author #{author}     
 */
@ViewClass(layout = ViewConstants.LAYOUT_POPUP)
public class #{crud.class}Select extends CRUDSelect<#{crud.class}> {

  protected FullTextCRUDFilter<#{crud.class}>    filter;
  protected List<#{crud.class}Listable> result;
  
  public #{crud.class}Select() {
    super( #{crud.class}Listable.class, #{crud.class}Instance.class,
           #{crud.class}Instance.class, #{crud.class}Instance.class );
    
    if (Roma.existComponent(#{crud.class}Repository.class))
			repository = Roma.component(#{crud.class}Repository.class);

    filter = new FullTextCRUDFilter<#{crud.class}>(Roma.component(#{crud.class}Factory.class).create());
    result = new ArrayList<#{crud.class}Listable>();
  }

  @Override
  public FullTextCRUDFilter<#{crud.class}> getFilter() {
    return filter;
  }

  @Override
  public List<#{crud.class}Listable> getResult() {
    return result;
  }

  @Override
  @SuppressWarnings("unchecked")
  public void setResult(Object iValue) {
    result = (List<#{crud.class}Listable>) iValue;
  }
}
