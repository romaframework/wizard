package #{class.package};

import java.util.ArrayList;
import java.util.List;

import org.romaframework.aspect.core.annotation.AnnotationConstants;
import org.romaframework.aspect.core.annotation.CoreField;
import org.romaframework.core.Roma;
import org.romaframework.frontend.domain.crud.CRUDMain;
import org.romaframework.frontend.domain.crud.FullTextCRUDFilter;

import #{domain.package}.#{crud.class};
import #{project.package}.factory.#{crud.class}Factory;
import #{project.package}.repository.#{crud.class}Repository;

/**
 * Main class to handle CRUD for #{crud.class} instances. It delegates all repository operations to
 * #{crud.class}Repository class following the DDD philosophy.
 * <br/><br/>
 * This class is generated by Roma Meta Framework CRUD wizard.       
 * <br/><br/>
 * @author #{author}     
 */
public class #{crud.class}Main extends CRUDMain<#{crud.class}> {
	@CoreField(embedded = AnnotationConstants.TRUE)
  protected FullTextCRUDFilter<#{crud.class}>         filter;
  protected List<#{crud.class}Listable> result;

  public #{crud.class}Main() {
    super( #{crud.class}Listable.class, #{crud.class}Instance.class,
           #{crud.class}Instance.class, #{crud.class}Instance.class );
           
		if (Roma.existComponent(#{crud.class}Repository.class))
			repository = Roma.component(#{crud.class}Repository.class);

    filter = new FullTextCRUDFilter<#{crud.class}>(Roma.component(#{crud.class}Factory.class).create());
    result = new ArrayList<#{crud.class}Listable>();
  }

  @Override
  public FullTextCRUDFilter<#{crud.class}> getFilter() {
    return filter;
  }

  @Override
  public List<#{crud.class}Listable> getResult() {
    return result;
  }

  @Override
  @SuppressWarnings("unchecked")
  public void setResult(Object iValue) {
    result = (List<#{crud.class}Listable>) iValue;
  }
}
