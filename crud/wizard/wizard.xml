<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="add-repository" name="roma-aspect-crud-wizard">
	<property environment="env" />
	<property name="roma.home" value="${env.ROMA_HOME}" />
	<import file="${wizard.path}/base-wizard.xml" />

	<target name="add-repository">

		<echo>Create Factory -></echo>
		<antcall target="copy">
			<param name="source" value="factory-template/Factory.java" />
			<param name="dest" value="${project.path}/${project.src}/${project.package-path}/factory/${project.crud.class}Factory.java" />
		</antcall>

		<if>
			<available file="${project.crud.package.path}/package.jdo" />
			<then>
				<echo>Create persistent class entry in package.jdo file -></echo>
				<xmlcatalog id="dtdJDO">
					<dtd publicId="-//Sun Microsystems, Inc.//DTD Java Data Objects Metadata 2.0//EN" location="${project.crud.package.path}/jdo.dtd" />
				</xmlcatalog>

				<xmltask source="${project.crud.package.path}/package.jdo" preservetype="true">
					<xmlcatalog refid="dtdJDO" />
					<copy path="/jdo/package/class[@name='${project.crud.class}']/@name" attrValue="true" property="existClass">
					</copy>
				</xmltask>
				<if>
					<not>
						<isset property="existClass" />
					</not>
					<then>
						<xmltask source="${project.crud.package.path}/package.jdo" dest="${project.crud.package.path}/package.jdo" preservetype="true" expandEntityReferences="false">
							<xmlcatalog refid="dtdJDO" />
							<insert path="/jdo/package" unless="existClass">
								<![CDATA[<class name="${project.crud.class}" detachable="true">
							</class>]]>
							</insert>
					</xmltask>
				</then>
			</if>
		</then>
	</if>

	<echo>Create Repository -></echo>
	<antcall target="copy">
		<param name="source" value="repository-template/Repository.java" />
		<param name="dest" value="${project.path}/${project.src}/${project.package-path}/repository/${project.crud.class}Repository.java" />
	</antcall>



	<if>
		<not>
			<available file="${project.path}/${project.ioc-path}/applicationContext-domain-repositories.xml" />
		</not>
		<then>
			<echo>Create applicationContext-domain-repositories.xml file -></echo>
			<copy file="applicationContext-domain-repositories.xml" todir="${project.path}/${project.ioc-path}">
				<filterset>
					<filter token="project.package" value="${project.package}" />
					<filter token="project.name" value="${project.name}" />
				</filterset>
			</copy>
		</then>
	</if>


	<echo>Adding ${project.crud.class}Repository class to the applicationContext-domain-repositories.xml -></echo>
	<xmltask source="${project.path}/${project.ioc-path}/applicationContext-domain-repositories.xml" dest="${project.path}/${project.ioc-path}/applicationContext-domain-repositories.xml" preservetype="true" expandEntityReferences="false">
		<remove path="/beans/bean[@name='${project.crud.class}Repository']" />
		<insert path="/beans">
			<![CDATA[<bean name="${project.crud.class}Repository"
					class="${project.package}.repository.${project.crud.class}Repository"
					singleton="true" /> ]]>
				</insert>
	</xmltask>

	<if>
		<not>
			<available file="${project.path}/${project.ioc-path}/applicationContext-domain-factories.xml" />
		</not>
		<then>
			<echo>Create applicationContext-domain-factories.xml file -></echo>
			<copy file="applicationContext-domain-factories.xml" todir="${project.path}/${project.ioc-path}">
				<filterset>
					<filter token="project.package" value="${project.package}" />
					<filter token="project.name" value="${project.name}" />
				</filterset>
			</copy>
		</then>
	</if>

	<echo>Adding ${project.crud.class}Factory class to the applicationContext-domain-factories.xml -></echo>
	<xmltask source="${project.path}/${project.ioc-path}/applicationContext-domain-factories.xml" dest="${project.path}/${project.ioc-path}/applicationContext-domain-factories.xml" preservetype="true" expandEntityReferences="false">
		<remove path="/beans/bean[@name='${project.crud.class}Factory']" />
		<insert path="/beans">
			<![CDATA[<bean name="${project.crud.class}Factory"
					class="${project.package}.factory.${project.crud.class}Factory"
					singleton="true" /> ]]>
				</insert>
	</xmltask>

	<echo>Create Crud Class -></echo>
	<copy file="repository-template/Repository.java" tofile="${project.path}/${project.src}/${project.package-path}/repository/${project.crud.class}Repository.java">
		<filterset begintoken="#{" endtoken="}">
			<filter token="project.package" value="${project.package}" />
			<filter token="domain.package" value="${project.domain.package}" />
			<filter token="project.name" value="${project.name}" />
			<filter token="crud.class" value="${project.crud.class}" />
		</filterset>
	</copy>
	<echo></echo>
	<antcall target="copy">
		<param name="source" value="view-template/Filter.java" />
		<param name="dest" value="${project.path}/${project.src}/${project.package-path}/view/domain/${project.crud.path}/${project.crud.class}Filter.java" />
	</antcall>
	<antcall target="copy">
		<param name="source" value="view-template/Filter.xml" />
		<param name="dest" value="${project.path}/${project.src}/${project.package-path}/view/domain/${project.crud.path}/${project.crud.class}Filter.xml" />
	</antcall>
	<antcall target="copy">
		<param name="source" value="view-template/Instance.java" />
		<param name="dest" value="${project.path}/${project.src}/${project.package-path}/view/domain/${project.crud.path}/${project.crud.class}Instance.java" />
	</antcall>
	<antcall target="copy">
		<param name="source" value="view-template/Instance.xml" />
		<param name="dest" value="${project.path}/${project.src}/${project.package-path}/view/domain/${project.crud.path}/${project.crud.class}Instance.xml" />
	</antcall>
	<antcall target="copy">
		<param name="source" value="view-template/Listable.java" />
		<param name="dest" value="${project.path}/${project.src}/${project.package-path}/view/domain/${project.crud.path}/${project.crud.class}Listable.java" />
	</antcall>
	<antcall target="copy">
		<param name="source" value="view-template/Listable.xml" />
		<param name="dest" value="${project.path}/${project.src}/${project.package-path}/view/domain/${project.crud.path}/${project.crud.class}Listable.xml" />
	</antcall>
	<antcall target="copy">
		<param name="source" value="view-template/Main.java" />
		<param name="dest" value="${project.path}/${project.src}/${project.package-path}/view/domain/${project.crud.path}/${project.crud.class}Main.java" />
	</antcall>
	<antcall target="copy">
		<param name="source" value="view-template/Select.java" />
		<param name="dest" value="${project.path}/${project.src}/${project.package-path}/view/domain/${project.crud.path}/${project.crud.class}Select.java" />
	</antcall>

</target>

<target name="copy">
	<copy file="${source}" tofile="${dest}">
		<filterset begintoken="#{" endtoken="}">
			<filter token="project.package" value="${project.package}" />
			<filter token="domain.package" value="${project.domain.package}" />
			<filter token="project.name" value="${project.name}" />
			<filter token="crud.class" value="${project.crud.class}" />
			<filter token="class.package" value="${project.package}.view.domain.${project.crud.path}" />
		</filterset>
	</copy>
</target>

</project>
